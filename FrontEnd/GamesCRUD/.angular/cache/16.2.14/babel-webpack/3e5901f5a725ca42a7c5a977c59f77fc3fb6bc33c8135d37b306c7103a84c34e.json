{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../consoles.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nexport class CadastroConsoleComponent {\n  constructor(service, formBuilder, rotas) {\n    this.service = service;\n    this.formBuilder = formBuilder;\n    this.rotas = rotas;\n  }\n  ngOnInit() {\n    this.formCadastro = this.formBuilder.group({\n      modelo: ['kevin', Validators.compose([Validators.required])],\n      fabricante: ['Gerencer', Validators.compose([Validators.required])]\n    });\n  }\n  cadastrarConsole() {\n    if (this.formCadastro.valid) {\n      this.service.cadastrar(this.formCadastro.value);\n      // .subscribe(() => { this.router.navigate(['component desejado])})\n    }\n  }\n  static #_ = this.ɵfac = function CadastroConsoleComponent_Factory(t) {\n    return new (t || CadastroConsoleComponent)(i0.ɵɵdirectiveInject(i1.ConsoleService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CadastroConsoleComponent,\n    selectors: [[\"app-cadastro-console\"]],\n    decls: 15,\n    vars: 1,\n    consts: [[3, \"formGroup\"], [\"for\", \"modelo\"], [\"type\", \"text\", \"id\", \"modelo\", \"formControlName\", \"modelo\"], [\"for\", \"fabricante\"], [\"type\", \"text\", \"id\", \"fabricante\", \"formControlName\", \"fabricante\"], [3, \"click\"]],\n    template: function CadastroConsoleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\")(1, \"header\")(2, \"h1\");\n        i0.ɵɵtext(3, \"Crie um novo console\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"form\", 0)(5, \"label\", 1);\n        i0.ɵɵtext(6, \"Modelo:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 2);\n        i0.ɵɵelementStart(8, \"label\", 3);\n        i0.ɵɵtext(9, \"Fabricante\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 4);\n        i0.ɵɵelementStart(11, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function CadastroConsoleComponent_Template_button_click_11_listener() {\n          return ctx.cadastrarConsole();\n        });\n        i0.ɵɵtext(12, \"Salvar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\");\n        i0.ɵɵtext(14, \"Cancelar\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.formCadastro);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","CadastroConsoleComponent","constructor","service","formBuilder","rotas","ngOnInit","formCadastro","group","modelo","compose","required","fabricante","cadastrarConsole","valid","cadastrar","value","_","i0","ɵɵdirectiveInject","i1","ConsoleService","i2","FormBuilder","i3","Router","_2","selectors","decls","vars","consts","template","CadastroConsoleComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","CadastroConsoleComponent_Template_button_click_11_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\kevin\\OneDrive\\Área de Trabalho\\GamesCRUD\\FrontEnd\\GamesCRUD\\src\\app\\pages\\home\\console\\cadastro-console\\cadastro-console.component.ts","C:\\Users\\kevin\\OneDrive\\Área de Trabalho\\GamesCRUD\\FrontEnd\\GamesCRUD\\src\\app\\pages\\home\\console\\cadastro-console\\cadastro-console.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ConsoleService } from '../consoles.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-cadastro-console',\n  templateUrl: './cadastro-console.component.html',\n  styleUrls: ['./cadastro-console.component.scss']\n})\n\nexport class CadastroConsoleComponent implements OnInit {\n\n  formCadastro!: FormGroup\n\n  constructor(\n    private service: ConsoleService,\n    private formBuilder: FormBuilder,\n    private rotas: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.formCadastro = this.formBuilder.group({\n      modelo: ['kevin', Validators.compose([\n        Validators.required\n      ])],\n      fabricante: ['Gerencer', Validators.compose([\n        Validators.required\n      ])]\n    })\n  }\n\n  cadastrarConsole() {\n    if(this.formCadastro.valid) {\n      this.service.cadastrar(this.formCadastro.value)\n      // .subscribe(() => { this.router.navigate(['component desejado])})\n    }\n  }\n\n}\n","<section>\r\n    <header>\r\n        <h1>Crie um novo console</h1>\r\n    </header>\r\n\r\n    <form [formGroup]=\"formCadastro\">\r\n        <!--modelo-->\r\n        <label for=\"modelo\">Modelo:</label>\r\n        <input type=\"text\" id=\"modelo\" formControlName=\"modelo\">\r\n\r\n        <!--fabricante-->\r\n        <label for=\"fabricante\">Fabricante</label>\r\n        <input type=\"text\" id=\"fabricante\" formControlName=\"fabricante\">\r\n\r\n        <!--submit-->\r\n        <button (click)=\"cadastrarConsole()\">Salvar</button>\r\n\r\n        <!--cancelar-->\r\n        <button>Cancelar</button>\r\n    </form>\r\n</section>"],"mappings":"AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AASnE,OAAM,MAAOC,wBAAwB;EAInCC,YACUC,OAAuB,EACvBC,WAAwB,EACxBC,KAAa;IAFb,KAAAF,OAAO,GAAPA,OAAO;IACP,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,KAAK,GAALA,KAAK;EACZ;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACzCC,MAAM,EAAE,CAAC,OAAO,EAAET,UAAU,CAACU,OAAO,CAAC,CACnCV,UAAU,CAACW,QAAQ,CACpB,CAAC,CAAC;MACHC,UAAU,EAAE,CAAC,UAAU,EAAEZ,UAAU,CAACU,OAAO,CAAC,CAC1CV,UAAU,CAACW,QAAQ,CACpB,CAAC;KACH,CAAC;EACJ;EAEAE,gBAAgBA,CAAA;IACd,IAAG,IAAI,CAACN,YAAY,CAACO,KAAK,EAAE;MAC1B,IAAI,CAACX,OAAO,CAACY,SAAS,CAAC,IAAI,CAACR,YAAY,CAACS,KAAK,CAAC;MAC/C;;EAEJ;EAAC,QAAAC,CAAA,G;qBA1BUhB,wBAAwB,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAxBzB,wBAAwB;IAAA0B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,kCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCXrCf,EAAA,CAAAiB,cAAA,cAAS;QAEGjB,EAAA,CAAAkB,MAAA,2BAAoB;QAAAlB,EAAA,CAAAmB,YAAA,EAAK;QAGjCnB,EAAA,CAAAiB,cAAA,cAAiC;QAETjB,EAAA,CAAAkB,MAAA,cAAO;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QACnCnB,EAAA,CAAAoB,SAAA,eAAwD;QAGxDpB,EAAA,CAAAiB,cAAA,eAAwB;QAAAjB,EAAA,CAAAkB,MAAA,iBAAU;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QAC1CnB,EAAA,CAAAoB,SAAA,gBAAgE;QAGhEpB,EAAA,CAAAiB,cAAA,iBAAqC;QAA7BjB,EAAA,CAAAqB,UAAA,mBAAAC,2DAAA;UAAA,OAASN,GAAA,CAAArB,gBAAA,EAAkB;QAAA,EAAC;QAACK,EAAA,CAAAkB,MAAA,cAAM;QAAAlB,EAAA,CAAAmB,YAAA,EAAS;QAGpDnB,EAAA,CAAAiB,cAAA,cAAQ;QAAAjB,EAAA,CAAAkB,MAAA,gBAAQ;QAAAlB,EAAA,CAAAmB,YAAA,EAAS;;;QAbvBnB,EAAA,CAAAuB,SAAA,GAA0B;QAA1BvB,EAAA,CAAAwB,UAAA,cAAAR,GAAA,CAAA3B,YAAA,CAA0B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}