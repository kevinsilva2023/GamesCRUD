{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let CadastroConsoleComponent = class CadastroConsoleComponent {\n  constructor(serviço, form) {\n    this.serviço = serviço;\n    this.form = form;\n  }\n  ngOnInit() {\n    this.formCadastro = this.form.group({\n      modelo: ['', Validators.compose([Validators.required])],\n      fabricante: ['', Validators.compose([Validators.required])]\n    });\n  }\n  cadastrarConsole() {\n    if (this.formCadastro.valid) {\n      this.serviço.cadastrar(this.formCadastro.value);\n      // .subscribe(() => { this.router.navigate(['component desejado])})\n    }\n  }\n};\n\nCadastroConsoleComponent = __decorate([Component({\n  selector: 'app-cadastro-console',\n  templateUrl: './cadastro-console.component.html',\n  styleUrls: ['./cadastro-console.component.scss']\n})], CadastroConsoleComponent);","map":{"version":3,"names":["Component","Validators","CadastroConsoleComponent","constructor","serviço","form","ngOnInit","formCadastro","group","modelo","compose","required","fabricante","cadastrarConsole","valid","cadastrar","value","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\kevin\\OneDrive\\Área de Trabalho\\GamesCRUD\\FrontEnd\\GamesCRUD\\src\\app\\pages\\home\\console\\cadastro-console\\cadastro-console.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ConsoleService } from '../consoles.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-cadastro-console',\n  templateUrl: './cadastro-console.component.html',\n  styleUrls: ['./cadastro-console.component.scss']\n})\nexport class CadastroConsoleComponent implements OnInit {\n\n  formCadastro!: FormGroup \n\n  constructor(\n    private serviço: ConsoleService,\n    private form: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.formCadastro = this.form.group({\n      modelo: ['', Validators.compose([\n        Validators.required\n      ])],\n      fabricante: ['', Validators.compose([\n        Validators.required\n      ])]\n    })\n  }\n\n  cadastrarConsole() {\n    if (this.formCadastro.valid) {\n      this.serviço.cadastrar(this.formCadastro.value)\n      // .subscribe(() => { this.router.navigate(['component desejado])})\n    }\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAO5D,WAAMC,wBAAwB,GAA9B,MAAMA,wBAAwB;EAInCC,YACUC,OAAuB,EACvBC,IAAiB;IADjB,KAAAD,OAAO,GAAPA,OAAO;IACP,KAAAC,IAAI,GAAJA,IAAI;EACX;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,GAAG,IAAI,CAACF,IAAI,CAACG,KAAK,CAAC;MAClCC,MAAM,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,OAAO,CAAC,CAC9BT,UAAU,CAACU,QAAQ,CACpB,CAAC,CAAC;MACHC,UAAU,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACS,OAAO,CAAC,CAClCT,UAAU,CAACU,QAAQ,CACpB,CAAC;KACH,CAAC;EACJ;EAEAE,gBAAgBA,CAAA;IACd,IAAI,IAAI,CAACN,YAAY,CAACO,KAAK,EAAE;MAC3B,IAAI,CAACV,OAAO,CAACW,SAAS,CAAC,IAAI,CAACR,YAAY,CAACS,KAAK,CAAC;MAC/C;;EAEJ;CAED;;AA3BYd,wBAAwB,GAAAe,UAAA,EALpCjB,SAAS,CAAC;EACTkB,QAAQ,EAAE,sBAAsB;EAChCC,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,mCAAmC;CAChD,CAAC,C,EACWlB,wBAAwB,CA2BpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}